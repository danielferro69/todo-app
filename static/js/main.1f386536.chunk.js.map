{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","TodoForm/index.js","CreateTodoButton/index.js","Modal/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","item","setItem","error","setError","loading","setLoading","useEffect","setTimeout","localItem","JSON","parse","localStorage","getItem","stringify","saveItem","newItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","searchText","toLowerCase","text","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","AppUI","Fragment","map","App","render"],"mappings":"iVAGMA,EAAcC,IAAMC,gBAE1B,SAASC,EAAaC,GAClB,MCJJ,SAAyBC,EAAUC,GAC/B,MAAwBL,IAAMM,SAASD,GAAvC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA0BR,IAAMM,UAAS,GAAzC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BV,IAAMM,UAAS,GAA7C,mBAAOK,EAAP,KAAgBC,EAAhB,KAgCF,OA3BEZ,IAAMa,WAAW,WAEfC,YAAW,WACT,IACE,IAAIC,EAAYC,KAAKC,MAAOC,aAAaC,QAAQf,IAE9CW,IACHG,aAAaV,QAAQJ,EAAUY,KAAKI,UAAUf,IAC9CU,EAAYV,GAEdG,EAAQO,GACRH,GAAW,GACT,MAAMH,GACNC,EAASD,MAEV,QAYA,CAACF,OACEc,SATO,SAACC,GAChB,IACAJ,aAAaV,QAAQJ,EAAUY,KAAKI,UAAUE,IAC9Cd,EAAQc,GACN,MAAMb,GACNC,EAASD,KAKHE,UACAF,SD7BAc,CAAgB,WAAY,IAJ1BC,EADV,EACIjB,KACUkB,EAFd,EAEIJ,SACAV,EAHJ,EAGIA,QACAF,EAJJ,EAIIA,MAEF,EAAsCT,IAAMM,SAAS,IAArD,mBAAOoB,EAAP,KAAoBC,EAApB,KACA,EAAkC3B,IAAMM,UAAS,GAAjD,mBAAOsB,EAAP,KAAkBC,EAAlB,KAEMC,EAAiBN,EAAMO,QAAO,SAAAC,GAAI,QAAMA,EAAKC,aAAWC,OACxDC,EAAaX,EAAMU,OAErBE,EAAgB,GAIjBA,GAFEV,EAAYQ,QAAU,EAERV,EAEDA,EAAMO,QAAQ,SAAAC,GAC5B,IAAMK,EAAaX,EAAYY,cAE/B,OADiBN,EAAKO,KAAKD,cACXE,SAASH,MA2B/B,OACA,cAACtC,EAAY0C,SAAb,CAAsBC,MAAO,CACzB/B,UACAF,QACA0B,aACAL,iBACAJ,cACAC,iBACAS,gBACAO,QAzBc,SAACJ,GACf,IAAMK,EAAQ,YAAOpB,GACrBoB,EAASC,KAAK,CACVZ,WAAW,EACXM,SAEJd,EAAUmB,IAoBVE,aAjCmB,SAACP,GACpB,IAAMQ,EAAYvB,EAAMwB,WAAU,SAAAhB,GAAI,OAAIA,EAAKO,OAASA,KAClDK,EAAQ,YAAOpB,GACrBoB,EAASG,GAAWd,WAAY,EAChCR,EAAUmB,IA8BVK,WAlBiB,SAACV,GAClB,IAAMQ,EAAYvB,EAAMwB,WAAU,SAAAhB,GAAI,OAAIA,EAAKO,OAASA,KAClDK,EAAQ,YAAOpB,GACrBoB,EAASM,OAAQH,EAAW,GAC5BtB,EAAUmB,IAeVhB,YACAC,gBAZJ,SAcK1B,EAAMgD,W,MEjEf,SAASC,IACL,MAAqCpD,IAAMqD,WAAWtD,GAA/CoC,EAAP,EAAOA,WAAYL,EAAnB,EAAmBA,eACnB,OACI,qBAAIwB,UAAU,cAAd,UAA6BxB,EAA7B,OAAiDK,EAAjD,wB,MCHR,SAASoB,IACP,MAAsCvD,IAAMqD,WAAWtD,GAAhD2B,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,eAIpB,OACE,uBACE2B,UAAU,aACVE,YAAY,GACZd,MAAOhB,EACP+B,SARwB,SAACC,GAC3B/B,EAAe+B,EAAMC,OAAOjB,U,MCJhC,SAASkB,EAASzD,GAChB,OACE,kCACE,6BACGA,EAAMgD,a,MCJf,SAASU,EAAS1D,GAEhB,OACE,qBAAImD,UAAU,WAAd,UACE,sBAAMA,UAAS,0BAAqBnD,EAAM8B,WAAa,sBACvD6B,QAAS3D,EAAM4D,WADf,oBAKA,mBAAGT,UAAS,qBAAgBnD,EAAM8B,WAAa,wBAA/C,SACG9B,EAAMoC,OAET,sBAAMe,UAAU,mBAChBQ,QAAS3D,EAAM6D,SADf,kB,MCXN,SAASC,IACL,MAAwCjE,IAAMM,SAAS,IAAvD,mBAAO4D,EAAP,KAAqBC,EAArB,KACA,EAGInE,IAAMqD,WAAWtD,GAFjB4C,EADJ,EACIA,QACAd,EAFJ,EAEIA,aAeJ,OACI,uBAAMuC,SANO,SAACV,GACdA,EAAMW,iBACN1B,EAAQuB,GACRrC,GAAa,IAGb,UACI,gDACA,0BACAa,MAAOwB,EACPT,SAdS,SAACC,GACdS,EAAgBT,EAAMC,OAAOjB,QAczBc,YAAY,2CAEZ,sBAAKF,UAAU,2BAAf,UACI,wBACIgB,KAAK,SACLhB,UAAU,0CACVQ,QAzBC,WACbjC,GAAa,IAqBL,sBAMA,wBACIyC,KAAK,SAELhB,UAAU,uCAHd,2B,MCnChB,SAASiB,EAAiBpE,GAQxB,OACE,wBAAQmD,UAAU,mBAQlBQ,QAhBoB,WACpB3D,EAAM0B,cAAa,SAAA2C,GAAS,OAAKA,MAOjC,e,MCRJ,SAASC,EAAT,GAA8B,IAAbtB,EAAY,EAAZA,SACf,OAAOuB,IAASC,aACV,qBAAKrB,UAAU,kBAAf,SACCH,IAEDyB,SAASC,eAAe,UCChC,SAASC,IACP,MASI9E,IAAMqD,WAAWtD,GARnBU,EADF,EACEA,MACAE,EAFF,EAEEA,QACAe,EAHF,EAGEA,YACAU,EAJF,EAIEA,cACAU,EALF,EAKEA,aACAG,EANF,EAMEA,WACArB,EAPF,EAOEA,UACAC,EARF,EAQEA,aAGF,OAQE,cAPA,CAOC,IAAMkD,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,eAAC,EAAD,WACGtE,GAAS,gFACTE,GAAW,wEACRA,IAAYyB,EAAcF,UAAaR,EAAYQ,QAAW,yEAC/DvB,IAAYyB,EAAcF,SAAWR,EAAYQ,QAAW,2DAE9DE,EAAc4C,KAAI,SAAAhD,GAAI,OACrB,cAAC,EAAD,CAEEO,KAAMP,EAAKO,KACXN,UAAWD,EAAKC,UAChB8B,WAAY,kBAAMjB,EAAad,EAAKO,OACpCyB,SAAU,kBAAMf,EAAWjB,EAAKO,QAJ3BP,EAAKO,cASbX,GACD,cAAC,EAAD,UACI,cAAC,EAAD,MAIN,cAAC,EAAD,CACEC,aAAcA,OC7CPoD,MARf,WACE,OACE,cAAC/E,EAAD,UACE,cAAC4E,EAAD,OCHNJ,IAASQ,OACP,cAAC,EAAD,IACAN,SAASC,eAAe,W","file":"static/js/main.1f386536.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useLocalStorage } from './useLocalStorage';\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n    const { \r\n        item: todos, \r\n        saveItem: saveTodos,\r\n        loading,\r\n        error\r\n        } = useLocalStorage('TODOS_V1', []);\r\n      const [searchValue, setSearchValue] = React.useState('');\r\n      const [openModal, setOpenModal] = React.useState(false);\r\n                                      // esto es todo.completed == true es el ! del !\r\n      const completedTodos = todos.filter(todo => !!todo.completed).length;\r\n      const totalTodos = todos.length;\r\n    \r\n      let searchedTodos = [];\r\n    \r\n      if (!searchValue.length >= 1)\r\n      {\r\n         searchedTodos = todos\r\n      } else {\r\n        searchedTodos = todos.filter( todo => {\r\n          const searchText = searchValue.toLowerCase();\r\n          const todoText = todo.text.toLowerCase();\r\n          return todoText.includes(searchText);\r\n        });\r\n      }\r\n    \r\n      const completeTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos[todoIndex].completed = true;\r\n        saveTodos(newTodos);\r\n      };\r\n    \r\n      const addTodo = (text) => {\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n            completed: false,\r\n            text,\r\n        })\r\n        saveTodos(newTodos);\r\n      };\r\n    \r\n      const deleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos.splice( todoIndex, 1 ); // elimina el elemento ( pos, cuantos desde ahi )\r\n        saveTodos(newTodos);\r\n      };\r\n    \r\n    return(\r\n    <TodoContext.Provider value={{\r\n        loading,\r\n        error,\r\n        totalTodos,\r\n        completedTodos,\r\n        searchValue,\r\n        setSearchValue,\r\n        searchedTodos,\r\n        addTodo,\r\n        completeTodo,\r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal\r\n    }}>\r\n        {props.children}\r\n    </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport { TodoContext, TodoProvider };\r\n","import React from 'react';\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [item, setItem] = React.useState(initialValue);\r\n    const [error, setError] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    // useEffect tiene la particularidad que se ejecuta despues de que todo el render se realizó.\r\n    // y si recibe un segundo parametro que es un array y dentro del array por ejemplo, enviaramos una \r\n    // variable  como totalTodos, el useEffect solo se ejecutaria, luego de todo el render, siempre y cuando\r\n    // la variable totalTodos hubiera cambiado. Sino, tampoco se ejecuta.\r\n    React.useEffect( () => {\r\n      // simulamos una espera como si llamaramos a una API\r\n      setTimeout(() => {\r\n        try {\r\n          let localItem = JSON.parse( localStorage.getItem(itemName) );\r\n  \r\n        if (!localItem) {\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n          localItem = initialValue;\r\n        }\r\n        setItem(localItem);\r\n        setLoading(false);\r\n        } catch(error) {\r\n          setError(error);\r\n        }\r\n      }, 1000 );\r\n  } //aqui iria ese segundo parametro como por ejemplo: ,[totalTodos]\r\n  );\r\n  \r\n  const saveItem = (newItem) => {\r\n    try {\r\n    localStorage.setItem(itemName, JSON.stringify(newItem));\r\n    setItem(newItem);\r\n    } catch(error){\r\n      setError(error);\r\n    }\r\n  }\r\n  return {item, \r\n            saveItem,\r\n            loading,\r\n            error};\r\n    \r\n  };\r\n\r\nexport { useLocalStorage };\r\n  ","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './TodoCounter.css';\r\n\r\nfunction TodoCounter() {\r\n    const {totalTodos, completedTodos} = React.useContext(TodoContext);\r\n    return (\r\n        <h2 className=\"TodoCounter\">{completedTodos} de {totalTodos} Tareas Realizadas</h2>\r\n    );\r\n}\r\n\r\nexport { TodoCounter };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n  const {searchValue, setSearchValue} = React.useContext(TodoContext);\n  const onSearchValueChange = (event) => {\n    setSearchValue(event.target.value);\n  }\n  return (\n    <input \n      className=\"TodoSearch\" \n      placeholder=\"\" \n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n    );\n}\n\nexport { TodoSearch };\n","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n  \n  return (\n    <li className=\"TodoItem\">\n      <span className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n      onClick={props.onComplete}\n      >\n        √\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span className=\"Icon Icon-delete\"\n      onClick={props.onDelete}\n      >\n        X\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './TodoForm.css';\r\n\r\nfunction TodoForm() {\r\n    const [newTodoValue, setNewTodoValue] = React.useState('');\r\n    const {\r\n        addTodo,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext);\r\n    const onCancel = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        setNewTodoValue(event.target.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault(); // evita que se recargue la pagina que es algo que el submit hace por default\r\n        addTodo(newTodoValue);\r\n        setOpenModal(false);\r\n    };\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label>Nueva Tarea</label>\r\n            <textarea\r\n            value={newTodoValue}\r\n            onChange={onChange} \r\n            placeholder=\"escribe aqui el texto para nueva tarea\"\r\n            />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"TodoForm-button TodoForm-button--cancel\"\r\n                    onClick={onCancel}>\r\n                    Cancelar\r\n                </button>\r\n                <button \r\n                    type=\"submit\"\r\n                    \r\n                    className=\"TodoForm-button TodoForm-button--add\">\r\n                    Agregar\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport { TodoForm };\r\n","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n  const onClickButton = () => {\n    props.setOpenModal(prevState => !prevState) \n                         // esto permite enviar como funcion \n                         // su estado previo,\n                         // le devolvemos la negacion de ese estado anterior.\n  };\n\n  return (\n    <button className=\"CreateTodoButton\"\n    // este onClick es una funcion porque si lo escribiera directamente asi:\n    // onClick={console.log('click')} se ejecutaria cuando carga la pagina.\n    // al ponerlo como una funcion, solo se ejecutará cuando realmente el evento ocurra\n    // onClick={()=> console.log('click')}    \n    // por eso hacemos una constante tipo \"funcion\" para mandarla al evento\n    // si por el contrario, esta funcion recibiera un parametro, por ejemplo el msj a mostrar\n    // entonces aunque ya es una funcion, debo llamarla asi: onClick={() => onClickButton(mmm)}\n    onClick = {onClickButton}  \n    >\n      \n      \n      +\n      \n      </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\n\r\nfunction Modal({ children }) {\r\n  return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">\r\n        {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    );    \r\n    }\r\n\r\nexport { Modal };","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport { TodoCounter } from '../TodoCounter';\r\nimport { TodoSearch } from '../TodoSearch';\r\nimport { TodoList } from '../TodoList';\r\nimport { TodoItem } from '../TodoItem';\r\nimport { TodoForm } from '../TodoForm';\r\nimport { CreateTodoButton } from '../CreateTodoButton';\r\nimport { Modal } from '../Modal';\r\n\r\nfunction AppUI() {\r\n  const {\r\n    error,\r\n    loading,\r\n    searchValue,\r\n    searchedTodos,\r\n    completeTodo,\r\n    deleteTodo,\r\n    openModal,\r\n    setOpenModal,\r\n  } = React.useContext(TodoContext);\r\n  \r\n  return (\r\n    // cuando necesitamos enviar varios componentes dentro de un mismo render\r\n    // como react requiere que vayan dentro de un unico\r\n    // componente, esta sintaxis llmando al componente React.Fragment\r\n    // y encerrando todos los otros componentes dentro de el\r\n    // no genera un error y nos permite trabajar sin necesidad\r\n    // de tener que separar cada componente en diferentes funciones\r\n\r\n    <React.Fragment>\r\n      <TodoCounter />\r\n      <TodoSearch />\r\n\r\n      <TodoList>\r\n        {error && <p>Ocurrió un error. Intente recargar la pagina</p>}\r\n        {loading && <p>Estamos cargando la lista de tareas...</p>}\r\n        {((!loading && !searchedTodos.length) && !!searchValue.length) && <p>No hubo coincidencias en la b&uacute;squeda</p>}\r\n        {(!loading && !searchedTodos.length && !searchValue.length) && <p>¡Crea tu primera Tarea!</p>}\r\n        \r\n        {searchedTodos.map(todo => (\r\n          <TodoItem\r\n            key={todo.text}\r\n            text={todo.text}\r\n            completed={todo.completed}\r\n            onComplete={() => completeTodo(todo.text)}\r\n            onDelete={() => deleteTodo(todo.text)}\r\n          />\r\n        ))}\r\n      </TodoList>\r\n\r\n      {!!openModal && (\r\n        <Modal>\r\n            <TodoForm />\r\n        </Modal>\r\n      )}\r\n\r\n      <CreateTodoButton\r\n        setOpenModal={setOpenModal}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { AppUI };","import React from 'react';\nimport { TodoProvider } from '../TodoContext';\nimport { AppUI } from './AppUI';\n\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}